# Windows key: Mod4
# Alt key: Mod1
set $mod Mod4

###									Window Settings									###	

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+x layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: I "
set $ws2 "2: II "
set $ws3 "3: III "
set $ws4 "4: IV "
set $ws5 "5: V "
set $ws6 "6: VI "
set $ws7 "7: VII "
set $ws8 "8: VIII "
set $ws9 "9: IX "
set $ws10 "10: X "

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# switch next/previous workspace 
bindsym $mod+Tab workspace next
bindsym $mod+q workspace prev

# Change focus to the next display 
bindsym $mod + Ctrl + l focus output left
bindsym $mod + Ctrl + h focus output right

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# resize window (you can also use the mouse for that)
mode "Resize" {

	bindsym h resize shrink width 10 px or 10 ppt
	bindsym j resize grow height 10 px or 10 ppt
	bindsym k resize shrink height 10 px or 10 ppt
	bindsym l resize grow width 10 px or 10 ppt

	# back to normal
	bindsym Return mode "default"
	bindsym Escape mode "default"
	bindsym $mod+r mode "default"
}

mode "Move" {

	bindsym h move left 25 px 
	bindsym j move down 20 px 
	bindsym k move up 20 px 
	bindsym l move right 25 px 

	# back to normal
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

# MODES 
bindsym $mod+m mode "Move"
bindsym $mod+r mode "Resize"

# py3status 
#bar {
#
#	status_command py3status -c ~/.config/i3status/config
#	font pango: DejaVu Sans 11
#	strip_workspace_numbers yes
#	mode dock 
#	tray_padding 2 
#	position top
#
#	colors {
#		background #0F0F0F
#	}
#
#}

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+ unmute
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%- unmute
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master 1+ toggle

# Screen brightness controls 
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +5
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -5

# Wallpaper 
exec_always --no-startup-id feh --bg-fill Pictures/Normie/Signals.jpg

# Start up programs 
exec_always --no-startup-id compton --config ~/.config/compton.conf 						# Compositor 
exec_always --no-startup-id ~/bash_scripts/defaultBar.sh									# Bars
exec --no-startup-id nm-applet 																# Network manager applet 
exec --no-startup-id redshift-gtk 															# My EYES!

# Program hotkeys 
bindsym $mod + c exec speedcrunch 															# Calculator
bindsym $mod + p exec pavucontrol 															# Pulse gui audio
bindsym $mod+z exec ~/.config/polybar/scripts/pmenu_1

# xRandr rotations
bindsym $mod + Shift + i exec xrandr --output eDP1 --rotate inverted 
bindsym $mod + Shift + n exec xrandr --output eDP1 --rotate normal

# Floatables
for_window [class="^.*"] border pixel 0 
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class = "discord"] floating enable 
for_window [class = "feh"] floating enable  
for_window [class = "SpeedCrunch"] floating enable 
for_window [class = "File-roller"] floating enable 
for_window [class = "Font-manager"] floating enable
for_window [class = "Pavucontrol"] floating enable
for_window [class = "VirtualBox Manager"] floating enable 
for_window [class = "Blueberry.py"] floating enable
for_window [class = "Lxappearance"] floating enable
for_window [class = "qt5ct"] floating enable

###									Misc.									###

# Rounded corners 
border_radius 2

# mouse focus
focus_follows_mouse no

# Automatic back-and-forth from previous desktop
workspace_auto_back_and_forth yes

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# rofi-menu 
# TODO: Create a mode for the different rofi scripts 
bindsym $mod+d exec ~/.config/rofi/scripts/appsmenu.sh 

# bindsym $mod+d exec rofi -show drun -show-icons -icon-theme MY_ICON_THEME

# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Log out?' -B 'Yes' 'No'"
bindsym $mod+Shift+e exec i3exit logout
###									GAPS									###	

gaps inner 10
gaps outer 5

# Gap hotkeys
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
